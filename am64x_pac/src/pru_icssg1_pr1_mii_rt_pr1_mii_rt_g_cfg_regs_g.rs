#[repr(C)]
#[doc = "Register block"]
pub struct RegisterBlock {
    _reserved0: [u8; 0x08],
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru0_0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru0_1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru1_0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru1_1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacInterface0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacInterface1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_preempt_cfg: Pr1MiiRt_Pr1MiiRtGCfg_RegsGPreemptCfg,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1s_cfg: Pr1MiiRt_Pr1MiiRtGCfg_RegsGSmdt1sCfg,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1c_cfg: Pr1MiiRt_Pr1MiiRtGCfg_RegsGSmdt1cCfg,
    _reserved9: [u8; 0x08],
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_frag_cnt_cfg: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFragCntCfg,
    _reserved10: [u8; 0x08],
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push2: Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush2,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push3: Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush3,
    _reserved14: [u8; 0x10],
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbGenCfg1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg2: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbGenCfg2,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_status: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbGenStatus,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_df_vlan: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbDfVlan,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostDa0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostDa1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_sa0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostSa0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_vlan_sa1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostVlanSa1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartAutoPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartLenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15JmpOffsetPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15LenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15CfgPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TMaskPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFtRxPtrPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15AndEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15OrEnPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg2Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates2Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates3Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates4Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates5Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates6Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates7Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates8Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates9Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates10Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates11Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates12Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates13Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates14Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates15Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxGreenPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGSaHashPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashStartPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg2Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg3Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg4Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg5Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg6Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg7Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_0Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_2Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_2Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_3Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_3Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_4Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_4Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_5Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_5Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_6Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_6Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_7Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_7Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatGoodPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBcPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMcPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatCrcErrPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMiiErrPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOddErrPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxSizePru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxErrPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinSizePru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinErrPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOverrunErrPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass0HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass1HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass2HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass3HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass4HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass5HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass6HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass7HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass8HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass9HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass10HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass11HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass12HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass13HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass14HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass15HitPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatSmdFragErrPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1SizePru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2SizePru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3SizePru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4SizePru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStat64Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt5Pru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatTotalBytesPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxtxStatTotalBytesPru0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatGoodPort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBcPort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMcPort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatOddErrPort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatUnderflowErrPort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxSizePort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxErrPort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinSizePort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinErrPort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1SizePort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2SizePort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3SizePort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4SizePort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStat64Port0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1Port0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2Port0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3Port0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4Port0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt5Port0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatTotalBytesPort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrTagPort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrSeqPort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanTypeTagPort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port0:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanInsTagPort0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartAutoPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartLenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15JmpOffsetPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15LenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15CfgPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TMaskPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFtRxPtrPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15AndEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15OrEnPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg2Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates2Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates3Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates4Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates5Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates6Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates7Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates8Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates9Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates10Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates11Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates12Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates13Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates14Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates15Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxGreenPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGSaHashPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashStartPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg2Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg3Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg4Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg5Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg6Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg7Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_0Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_2Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_2Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_3Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_3Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_4Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_4Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_5Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_5Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_6Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_6Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_7Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_7Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatGoodPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBcPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMcPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatCrcErrPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMiiErrPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOddErrPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxSizePru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxErrPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinSizePru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinErrPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOverrunErrPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass0HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass1HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass2HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass3HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass4HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass5HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass6HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass7HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass8HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass9HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass10HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass11HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass12HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass13HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass14HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass15HitPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatSmdFragErrPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1SizePru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2SizePru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3SizePru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4SizePru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStat64Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt5Pru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatTotalBytesPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxtxStatTotalBytesPru1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatGoodPort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBcPort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMcPort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatOddErrPort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatUnderflowErrPort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxSizePort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxErrPort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinSizePort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinErrPort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1SizePort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2SizePort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3SizePort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4SizePort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStat64Port1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1Port1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2Port1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3Port1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4Port1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt5Port1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatTotalBytesPort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrTagPort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrSeqPort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanTypeTagPort1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port1:
        Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanInsTagPort1,
    _reserved764: [u8; 0xe8],
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue2: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue2,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue3: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue3,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue4: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue4,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue5: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue5,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue6: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue6,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue7: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue7,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue8: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue8,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue9: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue9,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue10: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue10,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue11: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue11,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue12: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue12,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue13: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue13,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue14: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue14,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue15: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue15,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue16: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue16,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue17: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue17,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue18: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue18,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue19: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue19,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue20: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue20,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue21: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue21,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue22: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue22,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue23: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue23,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue24: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue24,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue25: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue25,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue26: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue26,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue27: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue27,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue28: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue28,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue29: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue29,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue30: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue30,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue31: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue31,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue32: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue32,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue33: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue33,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue34: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue34,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue35: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue35,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue36: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue36,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue37: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue37,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue38: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue38,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue39: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue39,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue40: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue40,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue41: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue41,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue42: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue42,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue43: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue43,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue44: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue44,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue45: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue45,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue46: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue46,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue47: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue47,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue48: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue48,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue49: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue49,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue50: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue50,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue51: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue51,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue52: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue52,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue53: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue53,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue54: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue54,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue55: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue55,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue56: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue56,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue57: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue57,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue58: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue58,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue59: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue59,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue60: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue60,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue61: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue61,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue62: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue62,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue63: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue63,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek2: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek2,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek3: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek3,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek4: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek4,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek5: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek5,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek6: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek6,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek7: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek7,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek8: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek8,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek9: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek9,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek10: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek10,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek11: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek11,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek12: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek12,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek13: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek13,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek14: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek14,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek15: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek15,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt0: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt0,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt1: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt1,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt2: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt2,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt3: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt3,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt4: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt4,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt5: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt5,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt6: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt6,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt7: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt7,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt8: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt8,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt9: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt9,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt10: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt10,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt11: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt11,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt12: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt12,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt13: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt13,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt14: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt14,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt15: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt15,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt16: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt16,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt17: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt17,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt18: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt18,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt19: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt19,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt20: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt20,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt21: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt21,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt22: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt22,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt23: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt23,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt24: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt24,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt25: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt25,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt26: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt26,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt27: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt27,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt28: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt28,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt29: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt29,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt30: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt30,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt31: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt31,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt32: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt32,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt33: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt33,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt34: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt34,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt35: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt35,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt36: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt36,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt37: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt37,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt38: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt38,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt39: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt39,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt40: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt40,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt41: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt41,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt42: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt42,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt43: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt43,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt44: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt44,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt45: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt45,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt46: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt46,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt47: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt47,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt48: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt48,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt49: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt49,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt50: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt50,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt51: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt51,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt52: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt52,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt53: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt53,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt54: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt54,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt55: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt55,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt56: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt56,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt57: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt57,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt58: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt58,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt59: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt59,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt60: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt60,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt61: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt61,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt62: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt62,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt63: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt63,
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_reset: Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueReset,
}
impl RegisterBlock {
    #[doc = "0x08 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru0_0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru0_0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_0
    }
    #[doc = "0x0c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru0_1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru0_1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_1
    }
    #[doc = "0x10 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru1_0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru1_0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_0
    }
    #[doc = "0x14 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru1_1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru1_1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_1
    }
    #[doc = "0x18 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_interface_0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacInterface0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_0
    }
    #[doc = "0x1c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_interface_1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacInterface1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_1
    }
    #[doc = "0x20 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_preempt_cfg"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_preempt_cfg(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGPreemptCfg {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_preempt_cfg
    }
    #[doc = "0x24 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_smdt1s_cfg"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1s_cfg(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGSmdt1sCfg {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1s_cfg
    }
    #[doc = "0x28 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_smdt1c_cfg"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1c_cfg(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGSmdt1cCfg {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1c_cfg
    }
    #[doc = "0x34 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_frag_cnt_cfg"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_frag_cnt_cfg(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFragCntCfg {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_frag_cnt_cfg
    }
    #[doc = "0x40 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push0
    }
    #[doc = "0x44 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push1
    }
    #[doc = "0x48 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push2"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push2(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush2 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push2
    }
    #[doc = "0x4c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push3"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push3(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush3 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push3
    }
    #[doc = "0x60 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_cfg1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbGenCfg1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg1
    }
    #[doc = "0x64 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_cfg2"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg2(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbGenCfg2 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg2
    }
    #[doc = "0x68 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_status"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_status(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbGenStatus {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_status
    }
    #[doc = "0x6c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_df_vlan"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_df_vlan(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbDfVlan {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_df_vlan
    }
    #[doc = "0x70 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_da0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostDa0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da0
    }
    #[doc = "0x74 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_da1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostDa1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da1
    }
    #[doc = "0x78 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_sa0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_sa0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostSa0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_sa0
    }
    #[doc = "0x7c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_vlan_sa1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_vlan_sa1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostVlanSa1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_vlan_sa1
    }
    #[doc = "0x80 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru0
    }
    #[doc = "0x84 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru0
    }
    #[doc = "0x88 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru0
    }
    #[doc = "0x8c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru0
    }
    #[doc = "0x90 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru0
    }
    #[doc = "0x94 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru0
    }
    #[doc = "0x98 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru0
    }
    #[doc = "0x9c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru0
    }
    #[doc = "0xa0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru0
    }
    #[doc = "0xa4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru0
    }
    #[doc = "0xa8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru0
    }
    #[doc = "0xac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru0
    }
    #[doc = "0xb0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru0
    }
    #[doc = "0xb4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru0
    }
    #[doc = "0xb8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru0
    }
    #[doc = "0xbc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru0
    }
    #[doc = "0xc0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru0
    }
    #[doc = "0xc4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru0
    }
    #[doc = "0xc8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru0
    }
    #[doc = "0xcc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru0
    }
    #[doc = "0xd0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru0
    }
    #[doc = "0xd4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru0
    }
    #[doc = "0xd8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru0
    }
    #[doc = "0xdc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru0
    }
    #[doc = "0xe0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru0
    }
    #[doc = "0xe4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru0
    }
    #[doc = "0xe8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru0
    }
    #[doc = "0xec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru0
    }
    #[doc = "0xf0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru0
    }
    #[doc = "0xf4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru0
    }
    #[doc = "0xf8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru0
    }
    #[doc = "0xfc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru0
    }
    #[doc = "0x100 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru0
    }
    #[doc = "0x104 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru0
    }
    #[doc = "0x108 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru0
    }
    #[doc = "0x10c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru0
    }
    #[doc = "0x110 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru0
    }
    #[doc = "0x114 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru0
    }
    #[doc = "0x118 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru0
    }
    #[doc = "0x11c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru0
    }
    #[doc = "0x120 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru0
    }
    #[doc = "0x124 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru0
    }
    #[doc = "0x128 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru0
    }
    #[doc = "0x12c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru0
    }
    #[doc = "0x130 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru0
    }
    #[doc = "0x134 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru0
    }
    #[doc = "0x138 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru0
    }
    #[doc = "0x13c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru0
    }
    #[doc = "0x140 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru0
    }
    #[doc = "0x144 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru0
    }
    #[doc = "0x148 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru0
    }
    #[doc = "0x14c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru0
    }
    #[doc = "0x150 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru0
    }
    #[doc = "0x154 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru0
    }
    #[doc = "0x158 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru0
    }
    #[doc = "0x15c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru0
    }
    #[doc = "0x160 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru0
    }
    #[doc = "0x164 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru0
    }
    #[doc = "0x168 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru0
    }
    #[doc = "0x16c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru0
    }
    #[doc = "0x170 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru0
    }
    #[doc = "0x174 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru0
    }
    #[doc = "0x178 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru0
    }
    #[doc = "0x17c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru0
    }
    #[doc = "0x180 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru0
    }
    #[doc = "0x184 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru0
    }
    #[doc = "0x188 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru0
    }
    #[doc = "0x18c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru0
    }
    #[doc = "0x190 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru0
    }
    #[doc = "0x194 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru0
    }
    #[doc = "0x198 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru0
    }
    #[doc = "0x19c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru0
    }
    #[doc = "0x1a0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru0
    }
    #[doc = "0x1a4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru0
    }
    #[doc = "0x1a8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru0
    }
    #[doc = "0x1ac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru0
    }
    #[doc = "0x1b0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru0
    }
    #[doc = "0x1b4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru0
    }
    #[doc = "0x1b8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru0
    }
    #[doc = "0x1bc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru0
    }
    #[doc = "0x1c0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru0
    }
    #[doc = "0x1c4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru0
    }
    #[doc = "0x1c8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru0
    }
    #[doc = "0x1cc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru0
    }
    #[doc = "0x1d0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru0
    }
    #[doc = "0x1d4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru0
    }
    #[doc = "0x1d8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru0
    }
    #[doc = "0x1dc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru0
    }
    #[doc = "0x1e0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru0
    }
    #[doc = "0x1e4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru0
    }
    #[doc = "0x1e8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru0
    }
    #[doc = "0x1ec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru0
    }
    #[doc = "0x1f0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru0
    }
    #[doc = "0x1f4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru0
    }
    #[doc = "0x1f8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru0
    }
    #[doc = "0x1fc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru0
    }
    #[doc = "0x200 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru0
    }
    #[doc = "0x204 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru0
    }
    #[doc = "0x208 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru0
    }
    #[doc = "0x20c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru0
    }
    #[doc = "0x210 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru0
    }
    #[doc = "0x214 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru0
    }
    #[doc = "0x218 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru0
    }
    #[doc = "0x21c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru0
    }
    #[doc = "0x220 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru0
    }
    #[doc = "0x224 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru0
    }
    #[doc = "0x228 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru0
    }
    #[doc = "0x22c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru0
    }
    #[doc = "0x230 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru0
    }
    #[doc = "0x234 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru0
    }
    #[doc = "0x238 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru0
    }
    #[doc = "0x23c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru0
    }
    #[doc = "0x240 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru0
    }
    #[doc = "0x244 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru0
    }
    #[doc = "0x248 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru0
    }
    #[doc = "0x24c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru0
    }
    #[doc = "0x250 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru0
    }
    #[doc = "0x254 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru0
    }
    #[doc = "0x258 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru0
    }
    #[doc = "0x25c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru0
    }
    #[doc = "0x260 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru0
    }
    #[doc = "0x264 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru0
    }
    #[doc = "0x268 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru0
    }
    #[doc = "0x26c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru0
    }
    #[doc = "0x270 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru0
    }
    #[doc = "0x274 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru0
    }
    #[doc = "0x278 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru0
    }
    #[doc = "0x27c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru0
    }
    #[doc = "0x280 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru0
    }
    #[doc = "0x284 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru0
    }
    #[doc = "0x288 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru0
    }
    #[doc = "0x28c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru0
    }
    #[doc = "0x290 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru0
    }
    #[doc = "0x294 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru0
    }
    #[doc = "0x298 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru0
    }
    #[doc = "0x29c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru0
    }
    #[doc = "0x2a0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru0
    }
    #[doc = "0x2a4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru0
    }
    #[doc = "0x2a8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru0
    }
    #[doc = "0x2ac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru0
    }
    #[doc = "0x2b0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru0
    }
    #[doc = "0x2b4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru0
    }
    #[doc = "0x2b8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru0
    }
    #[doc = "0x2bc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru0
    }
    #[doc = "0x2c0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru0
    }
    #[doc = "0x2c4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru0
    }
    #[doc = "0x2c8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru0
    }
    #[doc = "0x2cc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru0
    }
    #[doc = "0x2d0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru0
    }
    #[doc = "0x2d4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru0
    }
    #[doc = "0x2d8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru0
    }
    #[doc = "0x2dc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru0
    }
    #[doc = "0x2e0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru0
    }
    #[doc = "0x2e4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru0
    }
    #[doc = "0x2e8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru0
    }
    #[doc = "0x2ec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_auto_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartAutoPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru0
    }
    #[doc = "0x2f0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartLenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru0
    }
    #[doc = "0x2f4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_jmp_offset_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15JmpOffsetPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru0
    }
    #[doc = "0x2f8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_len_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15LenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru0
    }
    #[doc = "0x2fc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_cfg_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15CfgPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru0
    }
    #[doc = "0x300 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru0
    }
    #[doc = "0x304 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_mask_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TMaskPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru0
    }
    #[doc = "0x308 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru0
    }
    #[doc = "0x30c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru0
    }
    #[doc = "0x310 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru0
    }
    #[doc = "0x314 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru0
    }
    #[doc = "0x318 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru0
    }
    #[doc = "0x31c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru0
    }
    #[doc = "0x320 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru0
    }
    #[doc = "0x324 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru0
    }
    #[doc = "0x328 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru0
    }
    #[doc = "0x32c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru0
    }
    #[doc = "0x330 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru0
    }
    #[doc = "0x334 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru0
    }
    #[doc = "0x338 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru0
    }
    #[doc = "0x33c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru0
    }
    #[doc = "0x340 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru0
    }
    #[doc = "0x344 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru0
    }
    #[doc = "0x348 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru0
    }
    #[doc = "0x34c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru0
    }
    #[doc = "0x350 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru0
    }
    #[doc = "0x354 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru0
    }
    #[doc = "0x358 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru0
    }
    #[doc = "0x35c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru0
    }
    #[doc = "0x360 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru0
    }
    #[doc = "0x364 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru0
    }
    #[doc = "0x368 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru0
    }
    #[doc = "0x36c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru0
    }
    #[doc = "0x370 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru0
    }
    #[doc = "0x374 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru0
    }
    #[doc = "0x378 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru0
    }
    #[doc = "0x37c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru0
    }
    #[doc = "0x380 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru0
    }
    #[doc = "0x384 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru0
    }
    #[doc = "0x388 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru0
    }
    #[doc = "0x38c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru0
    }
    #[doc = "0x390 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru0
    }
    #[doc = "0x394 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru0
    }
    #[doc = "0x398 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru0
    }
    #[doc = "0x39c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru0
    }
    #[doc = "0x3a0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru0
    }
    #[doc = "0x3a4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru0
    }
    #[doc = "0x3a8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru0
    }
    #[doc = "0x3ac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru0
    }
    #[doc = "0x3b0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru0
    }
    #[doc = "0x3b4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru0
    }
    #[doc = "0x3b8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru0
    }
    #[doc = "0x3bc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru0
    }
    #[doc = "0x3c0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru0
    }
    #[doc = "0x3c4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru0
    }
    #[doc = "0x3c8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru0
    }
    #[doc = "0x3cc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru0
    }
    #[doc = "0x3d0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru0
    }
    #[doc = "0x3d4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru0
    }
    #[doc = "0x3d8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru0
    }
    #[doc = "0x3dc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru0
    }
    #[doc = "0x3e0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru0
    }
    #[doc = "0x3e4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru0
    }
    #[doc = "0x3e8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru0
    }
    #[doc = "0x3ec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru0
    }
    #[doc = "0x3f0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru0
    }
    #[doc = "0x3f4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru0
    }
    #[doc = "0x3f8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru0
    }
    #[doc = "0x3fc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru0
    }
    #[doc = "0x400 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru0
    }
    #[doc = "0x404 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru0
    }
    #[doc = "0x408 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft_rx_ptr_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFtRxPtrPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru0
    }
    #[doc = "0x40c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru0
    }
    #[doc = "0x410 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru0
    }
    #[doc = "0x414 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru0
    }
    #[doc = "0x418 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru0
    }
    #[doc = "0x41c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru0
    }
    #[doc = "0x420 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru0
    }
    #[doc = "0x424 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru0
    }
    #[doc = "0x428 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru0
    }
    #[doc = "0x42c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru0
    }
    #[doc = "0x430 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru0
    }
    #[doc = "0x434 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru0
    }
    #[doc = "0x438 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru0
    }
    #[doc = "0x43c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru0
    }
    #[doc = "0x440 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru0
    }
    #[doc = "0x444 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru0
    }
    #[doc = "0x448 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru0
    }
    #[doc = "0x44c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru0
    }
    #[doc = "0x450 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru0
    }
    #[doc = "0x454 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru0
    }
    #[doc = "0x458 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru0
    }
    #[doc = "0x45c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru0
    }
    #[doc = "0x460 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru0
    }
    #[doc = "0x464 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru0
    }
    #[doc = "0x468 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru0
    }
    #[doc = "0x46c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru0
    }
    #[doc = "0x470 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru0
    }
    #[doc = "0x474 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru0
    }
    #[doc = "0x478 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru0
    }
    #[doc = "0x47c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru0
    }
    #[doc = "0x480 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru0
    }
    #[doc = "0x484 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_and_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15AndEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru0
    }
    #[doc = "0x488 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_or_en_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15OrEnPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru0
    }
    #[doc = "0x48c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru0
    }
    #[doc = "0x490 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg2_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg2Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru0
    }
    #[doc = "0x494 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru0
    }
    #[doc = "0x498 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru0
    }
    #[doc = "0x49c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates2_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates2Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru0
    }
    #[doc = "0x4a0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates3_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates3Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru0
    }
    #[doc = "0x4a4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates4_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates4Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru0
    }
    #[doc = "0x4a8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates5_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates5Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru0
    }
    #[doc = "0x4ac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates6_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates6Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru0
    }
    #[doc = "0x4b0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates7_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates7Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru0
    }
    #[doc = "0x4b4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates8_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates8Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru0
    }
    #[doc = "0x4b8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates9_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates9Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru0
    }
    #[doc = "0x4bc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates10_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates10Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru0
    }
    #[doc = "0x4c0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates11_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates11Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru0
    }
    #[doc = "0x4c4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates12_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates12Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru0
    }
    #[doc = "0x4c8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates13_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates13Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru0
    }
    #[doc = "0x4cc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates14_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates14Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru0
    }
    #[doc = "0x4d0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates15_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates15Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru0
    }
    #[doc = "0x4d4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_green_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxGreenPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru0
    }
    #[doc = "0x4d8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_sa_hash_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGSaHashPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru0
    }
    #[doc = "0x4dc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru0
    }
    #[doc = "0x4e0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_start_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashStartPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru0
    }
    #[doc = "0x4e4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru0
    }
    #[doc = "0x4e8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru0
    }
    #[doc = "0x4ec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg2_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg2Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru0
    }
    #[doc = "0x4f0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg3_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg3Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru0
    }
    #[doc = "0x4f4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg4_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg4Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru0
    }
    #[doc = "0x4f8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg5_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg5Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru0
    }
    #[doc = "0x4fc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg6_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg6Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru0
    }
    #[doc = "0x500 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg7_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg7Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru0
    }
    #[doc = "0x504 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru0
    }
    #[doc = "0x508 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru0
    }
    #[doc = "0x50c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru0
    }
    #[doc = "0x510 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_0_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_0Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru0
    }
    #[doc = "0x514 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru0
    }
    #[doc = "0x518 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru0
    }
    #[doc = "0x51c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_2_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_2Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru0
    }
    #[doc = "0x520 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_2_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_2Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru0
    }
    #[doc = "0x524 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_3_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_3Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru0
    }
    #[doc = "0x528 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_3_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_3Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru0
    }
    #[doc = "0x52c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_4_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_4Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru0
    }
    #[doc = "0x530 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_4_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_4Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru0
    }
    #[doc = "0x534 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_5_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_5Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru0
    }
    #[doc = "0x538 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_5_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_5Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru0
    }
    #[doc = "0x53c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_6_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_6Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru0
    }
    #[doc = "0x540 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_6_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_6Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru0
    }
    #[doc = "0x544 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_7_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_7Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru0
    }
    #[doc = "0x548 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_7_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_7Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru0
    }
    #[doc = "0x54c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_good_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatGoodPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru0
    }
    #[doc = "0x550 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bc_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBcPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru0
    }
    #[doc = "0x554 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mc_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMcPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru0
    }
    #[doc = "0x558 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_crc_err_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatCrcErrPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru0
    }
    #[doc = "0x55c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mii_err_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMiiErrPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru0
    }
    #[doc = "0x560 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_odd_err_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOddErrPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru0
    }
    #[doc = "0x564 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_size_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxSizePru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru0
    }
    #[doc = "0x568 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_err_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxErrPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru0
    }
    #[doc = "0x56c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_size_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinSizePru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru0
    }
    #[doc = "0x570 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_err_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinErrPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru0
    }
    #[doc = "0x574 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_overrun_err_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOverrunErrPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru0
    }
    #[doc = "0x578 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class0_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass0HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru0
    }
    #[doc = "0x57c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class1_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass1HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru0
    }
    #[doc = "0x580 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class2_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass2HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru0
    }
    #[doc = "0x584 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class3_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass3HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru0
    }
    #[doc = "0x588 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class4_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass4HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru0
    }
    #[doc = "0x58c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class5_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass5HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru0
    }
    #[doc = "0x590 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class6_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass6HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru0
    }
    #[doc = "0x594 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class7_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass7HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru0
    }
    #[doc = "0x598 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class8_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass8HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru0
    }
    #[doc = "0x59c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class9_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass9HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru0
    }
    #[doc = "0x5a0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class10_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass10HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru0
    }
    #[doc = "0x5a4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class11_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass11HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru0
    }
    #[doc = "0x5a8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class12_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass12HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru0
    }
    #[doc = "0x5ac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class13_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass13HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru0
    }
    #[doc = "0x5b0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class14_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass14HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru0
    }
    #[doc = "0x5b4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class15_hit_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass15HitPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru0
    }
    #[doc = "0x5b8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_smd_frag_err_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatSmdFragErrPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru0
    }
    #[doc = "0x5bc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_size_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1SizePru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru0
    }
    #[doc = "0x5c0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_size_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2SizePru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru0
    }
    #[doc = "0x5c4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_size_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3SizePru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru0
    }
    #[doc = "0x5c8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_size_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4SizePru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru0
    }
    #[doc = "0x5cc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_64_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStat64Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru0
    }
    #[doc = "0x5d0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru0
    }
    #[doc = "0x5d4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru0
    }
    #[doc = "0x5d8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru0
    }
    #[doc = "0x5dc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru0
    }
    #[doc = "0x5e0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt5_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt5Pru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru0
    }
    #[doc = "0x5e4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_total_bytes_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatTotalBytesPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru0
    }
    #[doc = "0x5e8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rxtx_stat_total_bytes_pru0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxtxStatTotalBytesPru0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru0
    }
    #[doc = "0x5ec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_good_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatGoodPort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port0
    }
    #[doc = "0x5f0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bc_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBcPort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port0
    }
    #[doc = "0x5f4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_mc_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMcPort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port0
    }
    #[doc = "0x5f8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_odd_err_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatOddErrPort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port0
    }
    #[doc = "0x5fc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_underflow_err_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatUnderflowErrPort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port0
    }
    #[doc = "0x600 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_size_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxSizePort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port0
    }
    #[doc = "0x604 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_err_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxErrPort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port0
    }
    #[doc = "0x608 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_size_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinSizePort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port0
    }
    #[doc = "0x60c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_err_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinErrPort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port0
    }
    #[doc = "0x610 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_size_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1SizePort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port0
    }
    #[doc = "0x614 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_size_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2SizePort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port0
    }
    #[doc = "0x618 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_size_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3SizePort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port0
    }
    #[doc = "0x61c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_size_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4SizePort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port0
    }
    #[doc = "0x620 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_64_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStat64Port0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port0
    }
    #[doc = "0x624 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1Port0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port0
    }
    #[doc = "0x628 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2Port0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port0
    }
    #[doc = "0x62c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3Port0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port0
    }
    #[doc = "0x630 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4Port0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port0
    }
    #[doc = "0x634 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt5_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt5Port0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port0
    }
    #[doc = "0x638 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_total_bytes_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatTotalBytesPort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port0
    }
    #[doc = "0x63c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_tag_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrTagPort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port0
    }
    #[doc = "0x640 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_seq_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrSeqPort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port0
    }
    #[doc = "0x644 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_type_tag_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanTypeTagPort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port0
    }
    #[doc = "0x648 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_ins_tag_port0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanInsTagPort0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port0
    }
    #[doc = "0x64c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru1
    }
    #[doc = "0x650 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru1
    }
    #[doc = "0x654 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru1
    }
    #[doc = "0x658 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru1
    }
    #[doc = "0x65c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru1
    }
    #[doc = "0x660 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru1
    }
    #[doc = "0x664 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru1
    }
    #[doc = "0x668 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru1
    }
    #[doc = "0x66c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru1
    }
    #[doc = "0x670 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru1
    }
    #[doc = "0x674 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru1
    }
    #[doc = "0x678 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru1
    }
    #[doc = "0x67c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru1
    }
    #[doc = "0x680 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru1
    }
    #[doc = "0x684 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru1
    }
    #[doc = "0x688 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru1
    }
    #[doc = "0x68c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru1
    }
    #[doc = "0x690 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru1
    }
    #[doc = "0x694 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru1
    }
    #[doc = "0x698 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru1
    }
    #[doc = "0x69c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru1
    }
    #[doc = "0x6a0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru1
    }
    #[doc = "0x6a4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru1
    }
    #[doc = "0x6a8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru1
    }
    #[doc = "0x6ac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru1
    }
    #[doc = "0x6b0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru1
    }
    #[doc = "0x6b4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru1
    }
    #[doc = "0x6b8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru1
    }
    #[doc = "0x6bc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru1
    }
    #[doc = "0x6c0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru1
    }
    #[doc = "0x6c4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru1
    }
    #[doc = "0x6c8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru1
    }
    #[doc = "0x6cc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru1
    }
    #[doc = "0x6d0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru1
    }
    #[doc = "0x6d4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru1
    }
    #[doc = "0x6d8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru1
    }
    #[doc = "0x6dc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru1
    }
    #[doc = "0x6e0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru1
    }
    #[doc = "0x6e4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru1
    }
    #[doc = "0x6e8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru1
    }
    #[doc = "0x6ec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru1
    }
    #[doc = "0x6f0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru1
    }
    #[doc = "0x6f4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru1
    }
    #[doc = "0x6f8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru1
    }
    #[doc = "0x6fc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru1
    }
    #[doc = "0x700 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru1
    }
    #[doc = "0x704 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru1
    }
    #[doc = "0x708 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru1
    }
    #[doc = "0x70c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru1
    }
    #[doc = "0x710 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru1
    }
    #[doc = "0x714 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru1
    }
    #[doc = "0x718 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru1
    }
    #[doc = "0x71c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru1
    }
    #[doc = "0x720 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru1
    }
    #[doc = "0x724 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru1
    }
    #[doc = "0x728 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru1
    }
    #[doc = "0x72c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru1
    }
    #[doc = "0x730 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru1
    }
    #[doc = "0x734 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru1
    }
    #[doc = "0x738 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru1
    }
    #[doc = "0x73c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru1
    }
    #[doc = "0x740 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru1
    }
    #[doc = "0x744 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru1
    }
    #[doc = "0x748 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru1
    }
    #[doc = "0x74c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru1
    }
    #[doc = "0x750 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru1
    }
    #[doc = "0x754 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru1
    }
    #[doc = "0x758 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru1
    }
    #[doc = "0x75c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru1
    }
    #[doc = "0x760 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru1
    }
    #[doc = "0x764 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru1
    }
    #[doc = "0x768 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru1
    }
    #[doc = "0x76c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru1
    }
    #[doc = "0x770 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru1
    }
    #[doc = "0x774 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru1
    }
    #[doc = "0x778 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru1
    }
    #[doc = "0x77c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru1
    }
    #[doc = "0x780 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru1
    }
    #[doc = "0x784 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru1
    }
    #[doc = "0x788 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru1
    }
    #[doc = "0x78c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru1
    }
    #[doc = "0x790 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru1
    }
    #[doc = "0x794 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru1
    }
    #[doc = "0x798 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru1
    }
    #[doc = "0x79c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru1
    }
    #[doc = "0x7a0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru1
    }
    #[doc = "0x7a4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru1
    }
    #[doc = "0x7a8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru1
    }
    #[doc = "0x7ac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru1
    }
    #[doc = "0x7b0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru1
    }
    #[doc = "0x7b4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru1
    }
    #[doc = "0x7b8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru1
    }
    #[doc = "0x7bc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru1
    }
    #[doc = "0x7c0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru1
    }
    #[doc = "0x7c4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru1
    }
    #[doc = "0x7c8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru1
    }
    #[doc = "0x7cc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru1
    }
    #[doc = "0x7d0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru1
    }
    #[doc = "0x7d4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru1
    }
    #[doc = "0x7d8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru1
    }
    #[doc = "0x7dc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru1
    }
    #[doc = "0x7e0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru1
    }
    #[doc = "0x7e4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru1
    }
    #[doc = "0x7e8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru1
    }
    #[doc = "0x7ec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru1
    }
    #[doc = "0x7f0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru1
    }
    #[doc = "0x7f4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru1
    }
    #[doc = "0x7f8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru1
    }
    #[doc = "0x7fc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru1
    }
    #[doc = "0x800 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru1
    }
    #[doc = "0x804 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru1
    }
    #[doc = "0x808 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru1
    }
    #[doc = "0x80c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru1
    }
    #[doc = "0x810 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru1
    }
    #[doc = "0x814 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru1
    }
    #[doc = "0x818 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru1
    }
    #[doc = "0x81c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru1
    }
    #[doc = "0x820 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru1
    }
    #[doc = "0x824 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru1
    }
    #[doc = "0x828 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru1
    }
    #[doc = "0x82c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru1
    }
    #[doc = "0x830 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru1
    }
    #[doc = "0x834 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru1
    }
    #[doc = "0x838 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru1
    }
    #[doc = "0x83c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru1
    }
    #[doc = "0x840 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru1
    }
    #[doc = "0x844 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru1
    }
    #[doc = "0x848 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru1
    }
    #[doc = "0x84c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru1
    }
    #[doc = "0x850 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru1
    }
    #[doc = "0x854 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru1
    }
    #[doc = "0x858 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru1
    }
    #[doc = "0x85c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru1
    }
    #[doc = "0x860 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru1
    }
    #[doc = "0x864 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru1
    }
    #[doc = "0x868 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru1
    }
    #[doc = "0x86c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru1
    }
    #[doc = "0x870 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru1
    }
    #[doc = "0x874 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru1
    }
    #[doc = "0x878 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru1
    }
    #[doc = "0x87c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru1
    }
    #[doc = "0x880 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru1
    }
    #[doc = "0x884 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru1
    }
    #[doc = "0x888 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru1
    }
    #[doc = "0x88c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru1
    }
    #[doc = "0x890 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru1
    }
    #[doc = "0x894 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru1
    }
    #[doc = "0x898 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru1
    }
    #[doc = "0x89c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru1
    }
    #[doc = "0x8a0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru1
    }
    #[doc = "0x8a4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru1
    }
    #[doc = "0x8a8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru1
    }
    #[doc = "0x8ac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru1
    }
    #[doc = "0x8b0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru1
    }
    #[doc = "0x8b4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru1
    }
    #[doc = "0x8b8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_auto_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartAutoPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru1
    }
    #[doc = "0x8bc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartLenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru1
    }
    #[doc = "0x8c0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_jmp_offset_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15JmpOffsetPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru1
    }
    #[doc = "0x8c4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_len_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15LenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru1
    }
    #[doc = "0x8c8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_cfg_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15CfgPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru1
    }
    #[doc = "0x8cc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru1
    }
    #[doc = "0x8d0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_mask_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TMaskPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru1
    }
    #[doc = "0x8d4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru1
    }
    #[doc = "0x8d8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru1
    }
    #[doc = "0x8dc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru1
    }
    #[doc = "0x8e0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru1
    }
    #[doc = "0x8e4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru1
    }
    #[doc = "0x8e8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru1
    }
    #[doc = "0x8ec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru1
    }
    #[doc = "0x8f0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru1
    }
    #[doc = "0x8f4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru1
    }
    #[doc = "0x8f8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru1
    }
    #[doc = "0x8fc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru1
    }
    #[doc = "0x900 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru1
    }
    #[doc = "0x904 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru1
    }
    #[doc = "0x908 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru1
    }
    #[doc = "0x90c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru1
    }
    #[doc = "0x910 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru1
    }
    #[doc = "0x914 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru1
    }
    #[doc = "0x918 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru1
    }
    #[doc = "0x91c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru1
    }
    #[doc = "0x920 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru1
    }
    #[doc = "0x924 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru1
    }
    #[doc = "0x928 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru1
    }
    #[doc = "0x92c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru1
    }
    #[doc = "0x930 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru1
    }
    #[doc = "0x934 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru1
    }
    #[doc = "0x938 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru1
    }
    #[doc = "0x93c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru1
    }
    #[doc = "0x940 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru1
    }
    #[doc = "0x944 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru1
    }
    #[doc = "0x948 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru1
    }
    #[doc = "0x94c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru1
    }
    #[doc = "0x950 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru1
    }
    #[doc = "0x954 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru1
    }
    #[doc = "0x958 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru1
    }
    #[doc = "0x95c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru1
    }
    #[doc = "0x960 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru1
    }
    #[doc = "0x964 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru1
    }
    #[doc = "0x968 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru1
    }
    #[doc = "0x96c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru1
    }
    #[doc = "0x970 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru1
    }
    #[doc = "0x974 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru1
    }
    #[doc = "0x978 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru1
    }
    #[doc = "0x97c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru1
    }
    #[doc = "0x980 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru1
    }
    #[doc = "0x984 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru1
    }
    #[doc = "0x988 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru1
    }
    #[doc = "0x98c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru1
    }
    #[doc = "0x990 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru1
    }
    #[doc = "0x994 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru1
    }
    #[doc = "0x998 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru1
    }
    #[doc = "0x99c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru1
    }
    #[doc = "0x9a0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru1
    }
    #[doc = "0x9a4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru1
    }
    #[doc = "0x9a8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru1
    }
    #[doc = "0x9ac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru1
    }
    #[doc = "0x9b0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru1
    }
    #[doc = "0x9b4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru1
    }
    #[doc = "0x9b8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru1
    }
    #[doc = "0x9bc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru1
    }
    #[doc = "0x9c0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru1
    }
    #[doc = "0x9c4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru1
    }
    #[doc = "0x9c8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru1
    }
    #[doc = "0x9cc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru1
    }
    #[doc = "0x9d0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru1
    }
    #[doc = "0x9d4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft_rx_ptr_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGFtRxPtrPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru1
    }
    #[doc = "0x9d8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru1
    }
    #[doc = "0x9dc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru1
    }
    #[doc = "0x9e0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru1
    }
    #[doc = "0x9e4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru1
    }
    #[doc = "0x9e8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru1
    }
    #[doc = "0x9ec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru1
    }
    #[doc = "0x9f0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru1
    }
    #[doc = "0x9f4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru1
    }
    #[doc = "0x9f8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru1
    }
    #[doc = "0x9fc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru1
    }
    #[doc = "0xa00 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru1
    }
    #[doc = "0xa04 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru1
    }
    #[doc = "0xa08 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru1
    }
    #[doc = "0xa0c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru1
    }
    #[doc = "0xa10 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru1
    }
    #[doc = "0xa14 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru1
    }
    #[doc = "0xa18 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru1
    }
    #[doc = "0xa1c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru1
    }
    #[doc = "0xa20 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru1
    }
    #[doc = "0xa24 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru1
    }
    #[doc = "0xa28 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru1
    }
    #[doc = "0xa2c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru1
    }
    #[doc = "0xa30 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru1
    }
    #[doc = "0xa34 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru1
    }
    #[doc = "0xa38 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru1
    }
    #[doc = "0xa3c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru1
    }
    #[doc = "0xa40 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru1
    }
    #[doc = "0xa44 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru1
    }
    #[doc = "0xa48 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru1
    }
    #[doc = "0xa4c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru1
    }
    #[doc = "0xa50 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_and_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15AndEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru1
    }
    #[doc = "0xa54 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_or_en_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15OrEnPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru1
    }
    #[doc = "0xa58 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru1
    }
    #[doc = "0xa5c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg2_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg2Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru1
    }
    #[doc = "0xa60 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru1
    }
    #[doc = "0xa64 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru1
    }
    #[doc = "0xa68 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates2_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates2Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru1
    }
    #[doc = "0xa6c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates3_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates3Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru1
    }
    #[doc = "0xa70 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates4_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates4Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru1
    }
    #[doc = "0xa74 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates5_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates5Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru1
    }
    #[doc = "0xa78 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates6_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates6Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru1
    }
    #[doc = "0xa7c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates7_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates7Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru1
    }
    #[doc = "0xa80 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates8_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates8Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru1
    }
    #[doc = "0xa84 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates9_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates9Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru1
    }
    #[doc = "0xa88 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates10_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates10Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru1
    }
    #[doc = "0xa8c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates11_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates11Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru1
    }
    #[doc = "0xa90 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates12_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates12Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru1
    }
    #[doc = "0xa94 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates13_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates13Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru1
    }
    #[doc = "0xa98 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates14_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates14Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru1
    }
    #[doc = "0xa9c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates15_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates15Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru1
    }
    #[doc = "0xaa0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_green_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxGreenPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru1
    }
    #[doc = "0xaa4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_sa_hash_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGSaHashPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru1
    }
    #[doc = "0xaa8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru1
    }
    #[doc = "0xaac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_start_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashStartPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru1
    }
    #[doc = "0xab0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru1
    }
    #[doc = "0xab4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru1
    }
    #[doc = "0xab8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg2_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg2Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru1
    }
    #[doc = "0xabc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg3_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg3Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru1
    }
    #[doc = "0xac0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg4_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg4Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru1
    }
    #[doc = "0xac4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg5_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg5Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru1
    }
    #[doc = "0xac8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg6_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg6Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru1
    }
    #[doc = "0xacc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg7_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg7Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru1
    }
    #[doc = "0xad0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru1
    }
    #[doc = "0xad4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru1
    }
    #[doc = "0xad8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru1
    }
    #[doc = "0xadc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_0_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_0Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru1
    }
    #[doc = "0xae0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru1
    }
    #[doc = "0xae4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru1
    }
    #[doc = "0xae8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_2_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_2Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru1
    }
    #[doc = "0xaec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_2_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_2Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru1
    }
    #[doc = "0xaf0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_3_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_3Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru1
    }
    #[doc = "0xaf4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_3_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_3Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru1
    }
    #[doc = "0xaf8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_4_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_4Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru1
    }
    #[doc = "0xafc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_4_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_4Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru1
    }
    #[doc = "0xb00 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_5_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_5Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru1
    }
    #[doc = "0xb04 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_5_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_5Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru1
    }
    #[doc = "0xb08 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_6_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_6Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru1
    }
    #[doc = "0xb0c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_6_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_6Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru1
    }
    #[doc = "0xb10 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_7_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_7Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru1
    }
    #[doc = "0xb14 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_7_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_7Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru1
    }
    #[doc = "0xb18 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_good_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatGoodPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru1
    }
    #[doc = "0xb1c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bc_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBcPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru1
    }
    #[doc = "0xb20 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mc_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMcPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru1
    }
    #[doc = "0xb24 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_crc_err_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatCrcErrPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru1
    }
    #[doc = "0xb28 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mii_err_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMiiErrPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru1
    }
    #[doc = "0xb2c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_odd_err_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOddErrPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru1
    }
    #[doc = "0xb30 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_size_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxSizePru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru1
    }
    #[doc = "0xb34 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_err_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxErrPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru1
    }
    #[doc = "0xb38 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_size_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinSizePru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru1
    }
    #[doc = "0xb3c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_err_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinErrPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru1
    }
    #[doc = "0xb40 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_overrun_err_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOverrunErrPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru1
    }
    #[doc = "0xb44 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class0_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass0HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru1
    }
    #[doc = "0xb48 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class1_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass1HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru1
    }
    #[doc = "0xb4c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class2_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass2HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru1
    }
    #[doc = "0xb50 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class3_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass3HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru1
    }
    #[doc = "0xb54 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class4_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass4HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru1
    }
    #[doc = "0xb58 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class5_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass5HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru1
    }
    #[doc = "0xb5c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class6_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass6HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru1
    }
    #[doc = "0xb60 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class7_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass7HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru1
    }
    #[doc = "0xb64 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class8_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass8HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru1
    }
    #[doc = "0xb68 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class9_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass9HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru1
    }
    #[doc = "0xb6c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class10_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass10HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru1
    }
    #[doc = "0xb70 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class11_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass11HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru1
    }
    #[doc = "0xb74 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class12_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass12HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru1
    }
    #[doc = "0xb78 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class13_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass13HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru1
    }
    #[doc = "0xb7c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class14_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass14HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru1
    }
    #[doc = "0xb80 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class15_hit_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass15HitPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru1
    }
    #[doc = "0xb84 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_smd_frag_err_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatSmdFragErrPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru1
    }
    #[doc = "0xb88 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_size_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1SizePru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru1
    }
    #[doc = "0xb8c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_size_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2SizePru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru1
    }
    #[doc = "0xb90 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_size_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3SizePru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru1
    }
    #[doc = "0xb94 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_size_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4SizePru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru1
    }
    #[doc = "0xb98 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_64_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStat64Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru1
    }
    #[doc = "0xb9c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru1
    }
    #[doc = "0xba0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru1
    }
    #[doc = "0xba4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru1
    }
    #[doc = "0xba8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru1
    }
    #[doc = "0xbac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt5_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt5Pru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru1
    }
    #[doc = "0xbb0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_total_bytes_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatTotalBytesPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru1
    }
    #[doc = "0xbb4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rxtx_stat_total_bytes_pru1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxtxStatTotalBytesPru1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru1
    }
    #[doc = "0xbb8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_good_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatGoodPort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port1
    }
    #[doc = "0xbbc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bc_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBcPort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port1
    }
    #[doc = "0xbc0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_mc_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMcPort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port1
    }
    #[doc = "0xbc4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_odd_err_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatOddErrPort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port1
    }
    #[doc = "0xbc8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_underflow_err_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatUnderflowErrPort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port1
    }
    #[doc = "0xbcc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_size_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxSizePort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port1
    }
    #[doc = "0xbd0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_err_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxErrPort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port1
    }
    #[doc = "0xbd4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_size_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinSizePort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port1
    }
    #[doc = "0xbd8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_err_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinErrPort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port1
    }
    #[doc = "0xbdc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_size_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1SizePort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port1
    }
    #[doc = "0xbe0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_size_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2SizePort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port1
    }
    #[doc = "0xbe4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_size_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3SizePort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port1
    }
    #[doc = "0xbe8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_size_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4SizePort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port1
    }
    #[doc = "0xbec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_64_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStat64Port1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port1
    }
    #[doc = "0xbf0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1Port1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port1
    }
    #[doc = "0xbf4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2Port1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port1
    }
    #[doc = "0xbf8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3Port1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port1
    }
    #[doc = "0xbfc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4Port1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port1
    }
    #[doc = "0xc00 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt5_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt5Port1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port1
    }
    #[doc = "0xc04 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_total_bytes_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatTotalBytesPort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port1
    }
    #[doc = "0xc08 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_tag_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrTagPort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port1
    }
    #[doc = "0xc0c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_seq_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrSeqPort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port1
    }
    #[doc = "0xc10 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_type_tag_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanTypeTagPort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port1
    }
    #[doc = "0xc14 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_ins_tag_port1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanInsTagPort1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port1
    }
    #[doc = "0xd00 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue0
    }
    #[doc = "0xd04 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue1
    }
    #[doc = "0xd08 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue2"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue2(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue2 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue2
    }
    #[doc = "0xd0c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue3"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue3(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue3 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue3
    }
    #[doc = "0xd10 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue4"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue4(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue4 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue4
    }
    #[doc = "0xd14 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue5"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue5(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue5 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue5
    }
    #[doc = "0xd18 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue6"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue6(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue6 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue6
    }
    #[doc = "0xd1c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue7"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue7(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue7 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue7
    }
    #[doc = "0xd20 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue8"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue8(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue8 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue8
    }
    #[doc = "0xd24 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue9"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue9(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue9 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue9
    }
    #[doc = "0xd28 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue10"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue10(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue10 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue10
    }
    #[doc = "0xd2c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue11"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue11(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue11 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue11
    }
    #[doc = "0xd30 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue12"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue12(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue12 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue12
    }
    #[doc = "0xd34 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue13"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue13(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue13 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue13
    }
    #[doc = "0xd38 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue14"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue14(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue14 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue14
    }
    #[doc = "0xd3c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue15"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue15(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue15 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue15
    }
    #[doc = "0xd40 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue16"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue16(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue16 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue16
    }
    #[doc = "0xd44 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue17"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue17(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue17 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue17
    }
    #[doc = "0xd48 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue18"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue18(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue18 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue18
    }
    #[doc = "0xd4c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue19"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue19(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue19 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue19
    }
    #[doc = "0xd50 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue20"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue20(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue20 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue20
    }
    #[doc = "0xd54 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue21"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue21(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue21 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue21
    }
    #[doc = "0xd58 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue22"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue22(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue22 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue22
    }
    #[doc = "0xd5c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue23"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue23(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue23 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue23
    }
    #[doc = "0xd60 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue24"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue24(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue24 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue24
    }
    #[doc = "0xd64 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue25"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue25(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue25 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue25
    }
    #[doc = "0xd68 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue26"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue26(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue26 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue26
    }
    #[doc = "0xd6c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue27"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue27(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue27 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue27
    }
    #[doc = "0xd70 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue28"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue28(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue28 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue28
    }
    #[doc = "0xd74 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue29"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue29(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue29 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue29
    }
    #[doc = "0xd78 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue30"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue30(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue30 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue30
    }
    #[doc = "0xd7c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue31"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue31(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue31 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue31
    }
    #[doc = "0xd80 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue32"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue32(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue32 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue32
    }
    #[doc = "0xd84 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue33"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue33(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue33 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue33
    }
    #[doc = "0xd88 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue34"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue34(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue34 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue34
    }
    #[doc = "0xd8c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue35"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue35(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue35 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue35
    }
    #[doc = "0xd90 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue36"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue36(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue36 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue36
    }
    #[doc = "0xd94 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue37"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue37(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue37 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue37
    }
    #[doc = "0xd98 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue38"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue38(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue38 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue38
    }
    #[doc = "0xd9c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue39"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue39(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue39 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue39
    }
    #[doc = "0xda0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue40"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue40(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue40 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue40
    }
    #[doc = "0xda4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue41"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue41(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue41 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue41
    }
    #[doc = "0xda8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue42"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue42(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue42 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue42
    }
    #[doc = "0xdac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue43"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue43(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue43 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue43
    }
    #[doc = "0xdb0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue44"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue44(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue44 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue44
    }
    #[doc = "0xdb4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue45"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue45(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue45 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue45
    }
    #[doc = "0xdb8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue46"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue46(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue46 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue46
    }
    #[doc = "0xdbc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue47"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue47(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue47 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue47
    }
    #[doc = "0xdc0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue48"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue48(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue48 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue48
    }
    #[doc = "0xdc4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue49"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue49(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue49 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue49
    }
    #[doc = "0xdc8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue50"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue50(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue50 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue50
    }
    #[doc = "0xdcc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue51"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue51(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue51 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue51
    }
    #[doc = "0xdd0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue52"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue52(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue52 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue52
    }
    #[doc = "0xdd4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue53"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue53(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue53 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue53
    }
    #[doc = "0xdd8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue54"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue54(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue54 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue54
    }
    #[doc = "0xddc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue55"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue55(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue55 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue55
    }
    #[doc = "0xde0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue56"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue56(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue56 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue56
    }
    #[doc = "0xde4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue57"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue57(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue57 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue57
    }
    #[doc = "0xde8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue58"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue58(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue58 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue58
    }
    #[doc = "0xdec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue59"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue59(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue59 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue59
    }
    #[doc = "0xdf0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue60"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue60(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue60 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue60
    }
    #[doc = "0xdf4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue61"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue61(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue61 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue61
    }
    #[doc = "0xdf8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue62"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue62(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue62 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue62
    }
    #[doc = "0xdfc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue63"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue63(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue63 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue63
    }
    #[doc = "0xe00 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek0
    }
    #[doc = "0xe04 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek1
    }
    #[doc = "0xe08 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek2"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek2(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek2 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek2
    }
    #[doc = "0xe0c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek3"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek3(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek3 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek3
    }
    #[doc = "0xe10 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek4"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek4(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek4 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek4
    }
    #[doc = "0xe14 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek5"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek5(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek5 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek5
    }
    #[doc = "0xe18 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek6"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek6(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek6 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek6
    }
    #[doc = "0xe1c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek7"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek7(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek7 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek7
    }
    #[doc = "0xe20 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek8"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek8(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek8 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek8
    }
    #[doc = "0xe24 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek9"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek9(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek9 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek9
    }
    #[doc = "0xe28 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek10"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek10(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek10 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek10
    }
    #[doc = "0xe2c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek11"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek11(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek11 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek11
    }
    #[doc = "0xe30 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek12"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek12(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek12 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek12
    }
    #[doc = "0xe34 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek13"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek13(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek13 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek13
    }
    #[doc = "0xe38 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek14"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek14(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek14 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek14
    }
    #[doc = "0xe3c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek15"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek15(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek15 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek15
    }
    #[doc = "0xe40 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt0"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt0(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt0 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt0
    }
    #[doc = "0xe44 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt1"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt1(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt1 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt1
    }
    #[doc = "0xe48 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt2"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt2(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt2 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt2
    }
    #[doc = "0xe4c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt3"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt3(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt3 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt3
    }
    #[doc = "0xe50 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt4"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt4(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt4 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt4
    }
    #[doc = "0xe54 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt5"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt5(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt5 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt5
    }
    #[doc = "0xe58 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt6"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt6(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt6 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt6
    }
    #[doc = "0xe5c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt7"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt7(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt7 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt7
    }
    #[doc = "0xe60 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt8"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt8(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt8 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt8
    }
    #[doc = "0xe64 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt9"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt9(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt9 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt9
    }
    #[doc = "0xe68 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt10"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt10(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt10 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt10
    }
    #[doc = "0xe6c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt11"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt11(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt11 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt11
    }
    #[doc = "0xe70 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt12"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt12(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt12 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt12
    }
    #[doc = "0xe74 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt13"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt13(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt13 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt13
    }
    #[doc = "0xe78 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt14"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt14(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt14 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt14
    }
    #[doc = "0xe7c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt15"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt15(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt15 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt15
    }
    #[doc = "0xe80 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt16"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt16(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt16 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt16
    }
    #[doc = "0xe84 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt17"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt17(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt17 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt17
    }
    #[doc = "0xe88 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt18"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt18(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt18 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt18
    }
    #[doc = "0xe8c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt19"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt19(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt19 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt19
    }
    #[doc = "0xe90 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt20"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt20(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt20 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt20
    }
    #[doc = "0xe94 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt21"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt21(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt21 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt21
    }
    #[doc = "0xe98 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt22"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt22(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt22 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt22
    }
    #[doc = "0xe9c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt23"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt23(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt23 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt23
    }
    #[doc = "0xea0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt24"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt24(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt24 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt24
    }
    #[doc = "0xea4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt25"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt25(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt25 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt25
    }
    #[doc = "0xea8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt26"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt26(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt26 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt26
    }
    #[doc = "0xeac - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt27"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt27(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt27 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt27
    }
    #[doc = "0xeb0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt28"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt28(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt28 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt28
    }
    #[doc = "0xeb4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt29"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt29(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt29 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt29
    }
    #[doc = "0xeb8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt30"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt30(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt30 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt30
    }
    #[doc = "0xebc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt31"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt31(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt31 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt31
    }
    #[doc = "0xec0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt32"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt32(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt32 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt32
    }
    #[doc = "0xec4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt33"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt33(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt33 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt33
    }
    #[doc = "0xec8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt34"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt34(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt34 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt34
    }
    #[doc = "0xecc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt35"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt35(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt35 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt35
    }
    #[doc = "0xed0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt36"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt36(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt36 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt36
    }
    #[doc = "0xed4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt37"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt37(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt37 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt37
    }
    #[doc = "0xed8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt38"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt38(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt38 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt38
    }
    #[doc = "0xedc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt39"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt39(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt39 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt39
    }
    #[doc = "0xee0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt40"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt40(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt40 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt40
    }
    #[doc = "0xee4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt41"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt41(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt41 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt41
    }
    #[doc = "0xee8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt42"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt42(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt42 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt42
    }
    #[doc = "0xeec - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt43"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt43(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt43 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt43
    }
    #[doc = "0xef0 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt44"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt44(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt44 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt44
    }
    #[doc = "0xef4 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt45"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt45(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt45 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt45
    }
    #[doc = "0xef8 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt46"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt46(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt46 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt46
    }
    #[doc = "0xefc - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt47"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt47(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt47 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt47
    }
    #[doc = "0xf00 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt48"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt48(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt48 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt48
    }
    #[doc = "0xf04 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt49"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt49(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt49 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt49
    }
    #[doc = "0xf08 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt50"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt50(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt50 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt50
    }
    #[doc = "0xf0c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt51"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt51(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt51 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt51
    }
    #[doc = "0xf10 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt52"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt52(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt52 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt52
    }
    #[doc = "0xf14 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt53"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt53(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt53 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt53
    }
    #[doc = "0xf18 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt54"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt54(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt54 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt54
    }
    #[doc = "0xf1c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt55"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt55(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt55 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt55
    }
    #[doc = "0xf20 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt56"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt56(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt56 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt56
    }
    #[doc = "0xf24 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt57"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt57(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt57 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt57
    }
    #[doc = "0xf28 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt58"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt58(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt58 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt58
    }
    #[doc = "0xf2c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt59"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt59(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt59 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt59
    }
    #[doc = "0xf30 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt60"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt60(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt60 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt60
    }
    #[doc = "0xf34 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt61"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt61(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt61 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt61
    }
    #[doc = "0xf38 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt62"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt62(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt62 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt62
    }
    #[doc = "0xf3c - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt63"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt63(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt63 {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt63
    }
    #[doc = "0xf40 - PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_reset"]
    #[inline(always)]
    pub const fn pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_reset(
        &self,
    ) -> &Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueReset {
        &self.pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_reset
    }
}
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru0_0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru0_0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru0_0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru0_0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru0_0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru0_0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru0_1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru0_1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru0_1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru0_1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru0_1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru0_1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru0_1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru1_0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru1_0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru1_0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru1_0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru1_0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru1_0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru1_1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru1_1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru1_1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru1_1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacPru1_1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_pru1_1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_pru1_1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_interface_0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_interface_0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_interface_0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacInterface0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacInterface0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_interface_0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_interface_1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_interface_1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_interface_1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacInterface1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGMacInterface1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_mac_interface_1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_mac_interface_1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_preempt_cfg (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_preempt_cfg\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_preempt_cfg::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_preempt_cfg::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_preempt_cfg`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_preempt_cfg")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGPreemptCfg = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_preempt_cfg::Pr1MiiRt_Pr1MiiRtGCfg_RegsGPreemptCfgSpec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_preempt_cfg"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_preempt_cfg;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_smdt1s_cfg (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_smdt1s_cfg\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1s_cfg::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1s_cfg::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1s_cfg`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_smdt1s_cfg")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGSmdt1sCfg = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1s_cfg::Pr1MiiRt_Pr1MiiRtGCfg_RegsGSmdt1sCfgSpec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_smdt1s_cfg"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1s_cfg;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_smdt1c_cfg (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_smdt1c_cfg\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1c_cfg::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1c_cfg::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1c_cfg`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_smdt1c_cfg")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGSmdt1cCfg = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1c_cfg::Pr1MiiRt_Pr1MiiRtGCfg_RegsGSmdt1cCfgSpec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_smdt1c_cfg"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_smdt1c_cfg;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_frag_cnt_cfg (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_frag_cnt_cfg\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_frag_cnt_cfg::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_frag_cnt_cfg::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_frag_cnt_cfg`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_frag_cnt_cfg")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFragCntCfg = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_frag_cnt_cfg::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFragCntCfgSpec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_frag_cnt_cfg"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_frag_cnt_cfg;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push2 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push2\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push2::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push2::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push2`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push2")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush2 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push2::Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush2Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push2"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push2;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push3 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push3\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push3::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push3::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push3`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push3")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush3 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push3::Pr1MiiRt_Pr1MiiRtGCfg_RegsGPaStatPush3Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_pa_stat_push3"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_pa_stat_push3;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_cfg1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_cfg1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_cfg1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbGenCfg1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbGenCfg1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_cfg1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_cfg2 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_cfg2\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg2::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg2::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg2`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_cfg2")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbGenCfg2 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg2::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbGenCfg2Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_cfg2"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_cfg2;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_status (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_status\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_status::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_status::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_status`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_status")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbGenStatus = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_status :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbGenStatusSpec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_gen_status"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_gen_status;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_df_vlan (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_df_vlan\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_df_vlan::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_df_vlan::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_df_vlan`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_df_vlan")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbDfVlan = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_df_vlan::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbDfVlanSpec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_df_vlan"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_df_vlan;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_da0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_da0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_da0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostDa0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostDa0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_da0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_da1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_da1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_da1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostDa1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostDa1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_da1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_da1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_sa0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_sa0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_sa0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_sa0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_sa0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_sa0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostSa0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_sa0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostSa0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_sa0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_sa0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_vlan_sa1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_vlan_sa1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_vlan_sa1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_vlan_sa1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_vlan_sa1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_vlan_sa1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostVlanSa1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_vlan_sa1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFdbHostVlanSa1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_fdb_host_vlan_sa1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_fdb_host_vlan_sa1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1CfgPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1CfgPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_auto_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_auto_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_auto_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartAutoPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartAutoPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_auto_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartLenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartLenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_jmp_offset_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_jmp_offset_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_jmp_offset_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15JmpOffsetPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15JmpOffsetPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_jmp_offset_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_len_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_len_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_len_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15LenPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15LenPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_len_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_cfg_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_cfg_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_cfg_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15CfgPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15CfgPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_cfg_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_mask_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_mask_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_mask_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TMaskPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TMaskPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_mask_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P0Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P0Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P1Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P1Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P0Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P0Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P1Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P1Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P0Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P0Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P1Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P1Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P0Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P0Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P1Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P1Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P0Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P0Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P1Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P1Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P0Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P0Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P1Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P1Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P0Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P0Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P1Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P1Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P0Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P0Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P1Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P1Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P0Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P0Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P1Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P1Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P0Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P0Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P1Pru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P1Pru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft_rx_ptr_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft_rx_ptr_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft_rx_ptr_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFtRxPtrPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFtRxPtrPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft_rx_ptr_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_and_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_and_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_and_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15AndEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15AndEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_and_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_or_en_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_or_en_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_or_en_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15OrEnPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15OrEnPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_or_en_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg2_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg2_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg2_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg2Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg2Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg2_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates2_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates2_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates2_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates2Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates2Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates2_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates3_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates3_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates3_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates3Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates3Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates3_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates4_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates4_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates4_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates4Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates4Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates4_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates5_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates5_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates5_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates5Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates5Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates5_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates6_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates6_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates6_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates6Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates6Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates6_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates7_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates7_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates7_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates7Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates7Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates7_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates8_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates8_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates8_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates8Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates8Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates8_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates9_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates9_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates9_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates9Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates9Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates9_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates10_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates10_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates10_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates10Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates10Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates10_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates11_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates11_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates11_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates11Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates11Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates11_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates12_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates12_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates12_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates12Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates12Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates12_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates13_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates13_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates13_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates13Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates13Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates13_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates14_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates14_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates14_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates14Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates14Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates14_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates15_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates15_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates15_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates15Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates15Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates15_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_green_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_green_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_green_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxGreenPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxGreenPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_green_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_sa_hash_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_sa_hash_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_sa_hash_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGSaHashPru0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGSaHashPru0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_sa_hash_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_start_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_start_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_start_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashStartPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashStartPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_start_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg2_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg2_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg2_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg2Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg2Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg2_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg3_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg3_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg3_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg3Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg3Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg3_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg4_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg4_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg4_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg4Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg4Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg4_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg5_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg5_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg5_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg5Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg5Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg5_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg6_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg6_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg6_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg6Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg6Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg6_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg7_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg7_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg7_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg7Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg7Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg7_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_0_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_0_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_0_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_0Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_0Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_0_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_2_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_2_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_2_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_2Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_2Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_2_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_2_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_2_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_2_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_2Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_2Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_2_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_3_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_3_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_3_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_3Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_3Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_3_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_3_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_3_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_3_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_3Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_3Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_3_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_4_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_4_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_4_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_4Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_4Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_4_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_4_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_4_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_4_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_4Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_4Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_4_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_5_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_5_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_5_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_5Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_5Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_5_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_5_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_5_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_5_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_5Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_5Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_5_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_6_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_6_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_6_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_6Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_6Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_6_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_6_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_6_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_6_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_6Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_6Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_6_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_7_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_7_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_7_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_7Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_7Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_7_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_7_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_7_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_7_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_7Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_7Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_7_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_good_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_good_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_good_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatGoodPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatGoodPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_good_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bc_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bc_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bc_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBcPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBcPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bc_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mc_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mc_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mc_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMcPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMcPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mc_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_crc_err_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_crc_err_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_crc_err_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatCrcErrPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatCrcErrPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_crc_err_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mii_err_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mii_err_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mii_err_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMiiErrPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMiiErrPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mii_err_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_odd_err_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_odd_err_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_odd_err_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOddErrPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOddErrPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_odd_err_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_size_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_size_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_size_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxSizePru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxSizePru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_size_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_err_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_err_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_err_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxErrPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxErrPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_err_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_size_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_size_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_size_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinSizePru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinSizePru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_size_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_err_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_err_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_err_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinErrPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinErrPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_err_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_overrun_err_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_overrun_err_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_overrun_err_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOverrunErrPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOverrunErrPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_overrun_err_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class0_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class0_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class0_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass0HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass0HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class0_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class1_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class1_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class1_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass1HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass1HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class1_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class2_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class2_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class2_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass2HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass2HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class2_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class3_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class3_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class3_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass3HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass3HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class3_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class4_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class4_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class4_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass4HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass4HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class4_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class5_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class5_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class5_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass5HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass5HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class5_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class6_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class6_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class6_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass6HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass6HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class6_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class7_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class7_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class7_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass7HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass7HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class7_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class8_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class8_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class8_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass8HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass8HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class8_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class9_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class9_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class9_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass9HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass9HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class9_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class10_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class10_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class10_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass10HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass10HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class10_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class11_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class11_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class11_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass11HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass11HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class11_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class12_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class12_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class12_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass12HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass12HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class12_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class13_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class13_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class13_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass13HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass13HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class13_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class14_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class14_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class14_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass14HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass14HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class14_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class15_hit_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class15_hit_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class15_hit_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass15HitPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass15HitPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class15_hit_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_smd_frag_err_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_smd_frag_err_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_smd_frag_err_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatSmdFragErrPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatSmdFragErrPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_smd_frag_err_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_size_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_size_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_size_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1SizePru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1SizePru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_size_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_size_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_size_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_size_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2SizePru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2SizePru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_size_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_size_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_size_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_size_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3SizePru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3SizePru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_size_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_size_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_size_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_size_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4SizePru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4SizePru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_size_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_64_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_64_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_64_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStat64Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStat64Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_64_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt5_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt5_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt5_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt5Pru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt5Pru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt5_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_total_bytes_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_total_bytes_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_total_bytes_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatTotalBytesPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatTotalBytesPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_total_bytes_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rxtx_stat_total_bytes_pru0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rxtx_stat_total_bytes_pru0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rxtx_stat_total_bytes_pru0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxtxStatTotalBytesPru0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxtxStatTotalBytesPru0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rxtx_stat_total_bytes_pru0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_good_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_good_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_good_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatGoodPort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatGoodPort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_good_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bc_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bc_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bc_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBcPort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBcPort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bc_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_mc_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_mc_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_mc_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMcPort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMcPort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_mc_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_odd_err_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_odd_err_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_odd_err_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatOddErrPort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatOddErrPort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_odd_err_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_underflow_err_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_underflow_err_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_underflow_err_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatUnderflowErrPort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatUnderflowErrPort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_underflow_err_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_size_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_size_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_size_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxSizePort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxSizePort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_size_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_err_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_err_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_err_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxErrPort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxErrPort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_err_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_size_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_size_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_size_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinSizePort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinSizePort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_size_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_err_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_err_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_err_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinErrPort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinErrPort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_err_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_size_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_size_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_size_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1SizePort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1SizePort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_size_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_size_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_size_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_size_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2SizePort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2SizePort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_size_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_size_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_size_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_size_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3SizePort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3SizePort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_size_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_size_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_size_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_size_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4SizePort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4SizePort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_size_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_64_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_64_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_64_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStat64Port0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStat64Port0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_64_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1Port0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1Port0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2Port0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2Port0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3Port0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3Port0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4Port0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4Port0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt5_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt5_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt5_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt5Port0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt5Port0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt5_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_total_bytes_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_total_bytes_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_total_bytes_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatTotalBytesPort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatTotalBytesPort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_total_bytes_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_tag_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_tag_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_tag_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrTagPort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrTagPort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_tag_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_seq_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_seq_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_seq_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrSeqPort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrSeqPort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_seq_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_type_tag_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_type_tag_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_type_tag_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanTypeTagPort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanTypeTagPort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_type_tag_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_ins_tag_port0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_ins_tag_port0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_ins_tag_port0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanInsTagPort0 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port0 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanInsTagPort0Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_ins_tag_port0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1CfgPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1CfgPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0Da1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_0DaMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_0_da_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_0_da_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1Da1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_1DaMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_1_da_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_1_da_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2Da1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_2DaMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_2_da_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_2_da_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3Da1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_3DaMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_3_da_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_3_da_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4Da1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_4DaMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_4_da_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_4_da_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5Da1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_5DaMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_5_da_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_5_da_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6Da1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_6DaMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_6_da_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_6_da_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7Da1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt1_7DaMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft1_7_da_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft1_7_da_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_auto_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_auto_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_auto_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartAutoPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartAutoPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_auto_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_auto_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartLenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15StartLenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_start_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_start_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_jmp_offset_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_jmp_offset_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_jmp_offset_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15JmpOffsetPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15JmpOffsetPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_jmp_offset_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_jmp_offset_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_len_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_len_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_len_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15LenPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15LenPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_len_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_len_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_cfg_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_cfg_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_cfg_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15CfgPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15CfgPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_cfg_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_cfg_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_mask_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_mask_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_mask_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TMaskPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15TMaskPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_t_mask_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_t_mask_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P0Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P0Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P1Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0P1Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_0PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_0_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_0_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P0Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P0Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P1Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1P1Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_1PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_1_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_1_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P0Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P0Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P1Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2P1Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_2PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_2_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_2_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P0Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P0Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P1Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3P1Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_3PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_3_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_3_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P0Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P0Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P1Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4P1Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_4PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_4_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_4_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P0Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P0Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P1Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5P1Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_5PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_5_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_5_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P0Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P0Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P1Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6P1Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_6PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_6_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_6_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P0Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P0Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P1Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7P1Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_7PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_7_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_7_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P0Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P0Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P1Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8P1Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_8PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_8_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_8_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P0Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P0Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P1Pru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9P1Pru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_9PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_9_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_9_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10P1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_10PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_10_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_10_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11P1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_11PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_11_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_11_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12P1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_12PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_12_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_12_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13P1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_13PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_13_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_13_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14P1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_14PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_14_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_14_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15P1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGFt3_15PMask1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft3_15_p_mask1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft3_15_p_mask1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft_rx_ptr_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft_rx_ptr_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft_rx_ptr_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGFtRxPtrPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGFtRxPtrPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_ft_rx_ptr_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_ft_rx_ptr_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass0OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class0_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class0_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass1OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class1_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class1_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass2OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class2_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class2_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass3OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class3_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class3_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass4OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class4_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class4_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass5OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class5_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class5_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass6OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class6_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class6_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass7OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class7_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class7_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass8OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class8_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class8_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass9OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class9_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class9_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass10OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class10_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class10_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass11OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class11_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class11_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass12OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class12_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class12_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass13OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class13_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class13_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass14OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class14_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class14_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_and_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_and_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_and_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15AndEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15AndEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_and_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_and_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_or_en_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_or_en_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_or_en_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15OrEnPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClass15OrEnPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class15_or_en_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class15_or_en_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg2_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg2_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg2_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg2Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassCfg2Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_cfg2_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_cfg2_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates2_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates2_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates2_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates2Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates2Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates2_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates2_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates3_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates3_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates3_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates3Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates3Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates3_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates3_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates4_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates4_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates4_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates4Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates4Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates4_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates4_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates5_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates5_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates5_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates5Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates5Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates5_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates5_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates6_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates6_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates6_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates6Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates6Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates6_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates6_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates7_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates7_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates7_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates7Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates7Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates7_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates7_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates8_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates8_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates8_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates8Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates8Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates8_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates8_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates9_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates9_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates9_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates9Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates9Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates9_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates9_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates10_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates10_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates10_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates10Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates10Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates10_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates10_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates11_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates11_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates11_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates11Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates11Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates11_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates11_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates12_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates12_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates12_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates12Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates12Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates12_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates12_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates13_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates13_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates13_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates13Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates13Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates13_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates13_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates14_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates14_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates14_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates14Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates14Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates14_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates14_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates15_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates15_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates15_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates15Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxClassGates15Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_class_gates15_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_class_gates15_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_green_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_green_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_green_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxGreenPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxGreenPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_green_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_green_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_sa_hash_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_sa_hash_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_sa_hash_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGSaHashPru1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGSaHashPru1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_sa_hash_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_sa_hash_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_start_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_start_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_start_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashStartPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGConnHashStartPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_conn_hash_start_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_conn_hash_start_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg2_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg2_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg2_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg2Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg2Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg2_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg2_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg3_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg3_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg3_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg3Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg3Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg3_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg3_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg4_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg4_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg4_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg4Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg4Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg4_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg4_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg5_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg5_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg5_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg5Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg5Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg5_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg5_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg6_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg6_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg6_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg6Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg6Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg6_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg6_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg7_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg7_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg7_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg7Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateCfg7Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_cfg7_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_cfg7_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxRateSrcSel1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_rate_src_sel1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_rate_src_sel1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_0_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_0_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_0_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_0Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_0Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_0_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_0_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_2_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_2_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_2_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_2Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_2Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_2_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_2_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_2_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_2_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_2_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_2Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_2Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_2_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_2_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_3_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_3_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_3_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_3Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_3Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_3_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_3_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_3_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_3_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_3_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_3Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_3Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_3_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_3_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_4_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_4_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_4_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_4Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_4Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_4_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_4_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_4_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_4_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_4_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_4Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_4Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_4_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_4_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_5_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_5_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_5_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_5Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_5Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_5_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_5_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_5_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_5_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_5_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_5Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_5Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_5_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_5_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_6_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_6_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_6_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_6Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_6Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_6_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_6_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_6_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_6_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_6_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_6Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_6Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_6_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_6_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_7_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_7_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_7_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_7Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg1_7Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg1_7_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg1_7_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_7_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_7_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_7_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_7Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxRateCfg2_7Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_rate_cfg2_7_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_rate_cfg2_7_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_good_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_good_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_good_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatGoodPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatGoodPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_good_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_good_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bc_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bc_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bc_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBcPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBcPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bc_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bc_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mc_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mc_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mc_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMcPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMcPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mc_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mc_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_crc_err_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_crc_err_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_crc_err_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatCrcErrPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatCrcErrPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_crc_err_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_crc_err_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mii_err_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mii_err_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mii_err_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMiiErrPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMiiErrPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_mii_err_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_mii_err_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_odd_err_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_odd_err_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_odd_err_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOddErrPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOddErrPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_odd_err_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_odd_err_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_size_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_size_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_size_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxSizePru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxSizePru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_size_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_size_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_err_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_err_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_err_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxErrPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMaxErrPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_max_err_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_max_err_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_size_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_size_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_size_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinSizePru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinSizePru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_size_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_size_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_err_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_err_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_err_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinErrPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatMinErrPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_min_err_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_min_err_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_overrun_err_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_overrun_err_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_overrun_err_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOverrunErrPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatOverrunErrPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_overrun_err_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_overrun_err_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class0_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class0_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class0_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass0HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass0HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class0_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class0_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class1_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class1_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class1_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass1HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass1HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class1_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class1_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class2_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class2_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class2_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass2HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass2HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class2_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class2_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class3_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class3_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class3_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass3HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass3HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class3_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class3_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class4_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class4_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class4_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass4HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass4HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class4_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class4_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class5_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class5_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class5_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass5HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass5HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class5_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class5_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class6_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class6_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class6_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass6HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass6HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class6_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class6_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class7_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class7_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class7_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass7HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass7HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class7_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class7_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class8_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class8_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class8_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass8HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass8HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class8_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class8_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class9_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class9_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class9_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass9HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass9HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class9_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class9_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class10_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class10_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class10_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass10HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass10HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class10_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class10_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class11_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class11_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class11_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass11HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass11HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class11_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class11_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class12_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class12_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class12_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass12HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass12HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class12_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class12_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class13_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class13_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class13_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass13HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass13HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class13_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class13_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class14_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class14_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class14_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass14HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass14HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class14_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class14_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class15_hit_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class15_hit_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class15_hit_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass15HitPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatClass15HitPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_class15_hit_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_class15_hit_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_smd_frag_err_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_smd_frag_err_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_smd_frag_err_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatSmdFragErrPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatSmdFragErrPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_smd_frag_err_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_smd_frag_err_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_size_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_size_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_size_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1SizePru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1SizePru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_size_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_size_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_size_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_size_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_size_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2SizePru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2SizePru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_size_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_size_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_size_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_size_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_size_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3SizePru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3SizePru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_size_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_size_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_size_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_size_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_size_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4SizePru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4SizePru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_size_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_size_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_64_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_64_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_64_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStat64Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStat64Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_64_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_64_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt1Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt1_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt1_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt2Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt2_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt2_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt3Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt3_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt3_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt4Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt4_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt4_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt5_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt5_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt5_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt5Pru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatBkt5Pru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_bkt5_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_bkt5_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_total_bytes_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_total_bytes_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_total_bytes_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatTotalBytesPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxStatTotalBytesPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rx_stat_total_bytes_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rx_stat_total_bytes_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rxtx_stat_total_bytes_pru1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rxtx_stat_total_bytes_pru1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rxtx_stat_total_bytes_pru1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxtxStatTotalBytesPru1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGRxtxStatTotalBytesPru1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_rxtx_stat_total_bytes_pru1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_rxtx_stat_total_bytes_pru1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_good_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_good_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_good_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatGoodPort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatGoodPort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_good_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_good_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bc_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bc_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bc_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBcPort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBcPort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bc_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bc_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_mc_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_mc_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_mc_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMcPort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMcPort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_mc_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_mc_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_odd_err_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_odd_err_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_odd_err_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatOddErrPort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatOddErrPort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_odd_err_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_odd_err_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_underflow_err_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_underflow_err_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_underflow_err_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatUnderflowErrPort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatUnderflowErrPort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_underflow_err_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_underflow_err_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_size_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_size_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_size_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxSizePort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxSizePort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_size_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_size_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_err_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_err_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_err_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxErrPort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMaxErrPort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_max_err_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_max_err_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_size_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_size_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_size_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinSizePort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinSizePort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_size_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_size_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_err_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_err_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_err_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinErrPort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatMinErrPort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_min_err_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_min_err_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_size_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_size_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_size_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1SizePort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1SizePort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_size_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_size_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_size_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_size_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_size_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2SizePort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2SizePort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_size_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_size_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_size_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_size_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_size_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3SizePort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3SizePort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_size_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_size_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_size_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_size_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_size_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4SizePort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4SizePort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_size_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_size_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_64_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_64_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_64_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStat64Port1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStat64Port1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_64_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_64_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1Port1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt1Port1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt1_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt1_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2Port1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt2Port1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt2_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt2_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3Port1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt3Port1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt3_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt3_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4Port1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt4Port1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt4_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt4_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt5_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt5_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt5_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt5Port1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatBkt5Port1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_bkt5_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_bkt5_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_total_bytes_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_total_bytes_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_total_bytes_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatTotalBytesPort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxStatTotalBytesPort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_stat_total_bytes_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_stat_total_bytes_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_tag_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_tag_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_tag_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrTagPort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrTagPort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_tag_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_tag_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_seq_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_seq_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_seq_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrSeqPort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxHsrSeqPort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_hsr_seq_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_hsr_seq_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_type_tag_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_type_tag_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_type_tag_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanTypeTagPort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanTypeTagPort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_type_tag_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_type_tag_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_ins_tag_port1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_ins_tag_port1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_ins_tag_port1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanInsTagPort1 = crate :: Reg < pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port1 :: Pr1MiiRt_Pr1MiiRtGCfg_RegsGTxVlanInsTagPort1Spec > ;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_tx_vlan_ins_tag_port1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_tx_vlan_ins_tag_port1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue0 =
    crate::Reg<pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue0Spec>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue1 =
    crate::Reg<pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue1Spec>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue2 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue2\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue2::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue2::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue2`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue2")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue2 =
    crate::Reg<pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue2::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue2Spec>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue2"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue2;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue3 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue3\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue3::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue3::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue3`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue3")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue3 =
    crate::Reg<pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue3::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue3Spec>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue3"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue3;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue4 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue4\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue4::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue4::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue4`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue4")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue4 =
    crate::Reg<pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue4::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue4Spec>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue4"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue4;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue5 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue5\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue5::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue5::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue5`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue5")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue5 =
    crate::Reg<pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue5::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue5Spec>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue5"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue5;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue6 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue6\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue6::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue6::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue6`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue6")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue6 =
    crate::Reg<pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue6::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue6Spec>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue6"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue6;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue7 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue7\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue7::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue7::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue7`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue7")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue7 =
    crate::Reg<pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue7::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue7Spec>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue7"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue7;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue8 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue8\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue8::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue8::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue8`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue8")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue8 =
    crate::Reg<pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue8::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue8Spec>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue8"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue8;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue9 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue9\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue9::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue9::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue9`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue9")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue9 =
    crate::Reg<pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue9::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue9Spec>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue9"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue9;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue10 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue10\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue10::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue10::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue10`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue10")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue10 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue10::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue10Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue10"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue10;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue11 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue11\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue11::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue11::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue11`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue11")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue11 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue11::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue11Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue11"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue11;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue12 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue12\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue12::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue12::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue12`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue12")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue12 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue12::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue12Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue12"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue12;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue13 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue13\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue13::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue13::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue13`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue13")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue13 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue13::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue13Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue13"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue13;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue14 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue14\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue14::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue14::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue14`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue14")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue14 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue14::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue14Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue14"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue14;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue15 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue15\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue15::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue15::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue15`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue15")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue15 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue15::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue15Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue15"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue15;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue16 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue16\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue16::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue16::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue16`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue16")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue16 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue16::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue16Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue16"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue16;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue17 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue17\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue17::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue17::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue17`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue17")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue17 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue17::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue17Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue17"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue17;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue18 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue18\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue18::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue18::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue18`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue18")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue18 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue18::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue18Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue18"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue18;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue19 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue19\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue19::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue19::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue19`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue19")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue19 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue19::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue19Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue19"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue19;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue20 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue20\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue20::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue20::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue20`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue20")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue20 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue20::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue20Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue20"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue20;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue21 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue21\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue21::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue21::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue21`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue21")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue21 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue21::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue21Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue21"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue21;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue22 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue22\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue22::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue22::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue22`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue22")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue22 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue22::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue22Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue22"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue22;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue23 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue23\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue23::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue23::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue23`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue23")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue23 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue23::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue23Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue23"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue23;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue24 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue24\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue24::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue24::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue24`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue24")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue24 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue24::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue24Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue24"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue24;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue25 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue25\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue25::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue25::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue25`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue25")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue25 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue25::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue25Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue25"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue25;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue26 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue26\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue26::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue26::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue26`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue26")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue26 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue26::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue26Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue26"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue26;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue27 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue27\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue27::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue27::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue27`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue27")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue27 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue27::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue27Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue27"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue27;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue28 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue28\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue28::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue28::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue28`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue28")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue28 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue28::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue28Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue28"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue28;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue29 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue29\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue29::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue29::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue29`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue29")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue29 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue29::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue29Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue29"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue29;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue30 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue30\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue30::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue30::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue30`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue30")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue30 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue30::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue30Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue30"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue30;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue31 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue31\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue31::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue31::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue31`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue31")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue31 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue31::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue31Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue31"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue31;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue32 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue32\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue32::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue32::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue32`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue32")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue32 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue32::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue32Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue32"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue32;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue33 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue33\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue33::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue33::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue33`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue33")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue33 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue33::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue33Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue33"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue33;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue34 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue34\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue34::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue34::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue34`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue34")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue34 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue34::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue34Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue34"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue34;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue35 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue35\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue35::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue35::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue35`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue35")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue35 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue35::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue35Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue35"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue35;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue36 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue36\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue36::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue36::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue36`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue36")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue36 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue36::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue36Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue36"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue36;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue37 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue37\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue37::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue37::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue37`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue37")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue37 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue37::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue37Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue37"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue37;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue38 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue38\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue38::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue38::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue38`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue38")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue38 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue38::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue38Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue38"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue38;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue39 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue39\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue39::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue39::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue39`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue39")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue39 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue39::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue39Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue39"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue39;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue40 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue40\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue40::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue40::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue40`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue40")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue40 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue40::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue40Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue40"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue40;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue41 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue41\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue41::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue41::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue41`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue41")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue41 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue41::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue41Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue41"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue41;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue42 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue42\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue42::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue42::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue42`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue42")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue42 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue42::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue42Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue42"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue42;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue43 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue43\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue43::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue43::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue43`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue43")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue43 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue43::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue43Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue43"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue43;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue44 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue44\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue44::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue44::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue44`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue44")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue44 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue44::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue44Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue44"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue44;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue45 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue45\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue45::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue45::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue45`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue45")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue45 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue45::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue45Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue45"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue45;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue46 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue46\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue46::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue46::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue46`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue46")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue46 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue46::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue46Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue46"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue46;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue47 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue47\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue47::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue47::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue47`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue47")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue47 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue47::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue47Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue47"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue47;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue48 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue48\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue48::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue48::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue48`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue48")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue48 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue48::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue48Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue48"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue48;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue49 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue49\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue49::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue49::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue49`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue49")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue49 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue49::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue49Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue49"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue49;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue50 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue50\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue50::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue50::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue50`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue50")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue50 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue50::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue50Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue50"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue50;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue51 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue51\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue51::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue51::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue51`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue51")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue51 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue51::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue51Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue51"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue51;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue52 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue52\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue52::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue52::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue52`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue52")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue52 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue52::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue52Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue52"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue52;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue53 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue53\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue53::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue53::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue53`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue53")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue53 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue53::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue53Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue53"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue53;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue54 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue54\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue54::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue54::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue54`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue54")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue54 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue54::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue54Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue54"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue54;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue55 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue55\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue55::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue55::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue55`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue55")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue55 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue55::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue55Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue55"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue55;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue56 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue56\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue56::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue56::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue56`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue56")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue56 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue56::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue56Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue56"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue56;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue57 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue57\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue57::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue57::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue57`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue57")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue57 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue57::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue57Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue57"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue57;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue58 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue58\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue58::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue58::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue58`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue58")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue58 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue58::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue58Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue58"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue58;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue59 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue59\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue59::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue59::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue59`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue59")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue59 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue59::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue59Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue59"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue59;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue60 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue60\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue60::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue60::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue60`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue60")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue60 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue60::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue60Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue60"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue60;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue61 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue61\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue61::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue61::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue61`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue61")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue61 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue61::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue61Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue61"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue61;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue62 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue62\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue62::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue62::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue62`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue62")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue62 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue62::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue62Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue62"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue62;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue63 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue63\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue63::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue63::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue63`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue63")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue63 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue63::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueue63Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue63"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue63;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek2 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek2\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek2::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek2::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek2`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek2")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek2 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek2::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek2Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek2"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek2;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek3 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek3\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek3::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek3::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek3`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek3")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek3 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek3::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek3Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek3"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek3;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek4 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek4\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek4::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek4::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek4`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek4")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek4 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek4::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek4Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek4"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek4;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek5 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek5\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek5::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek5::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek5`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek5")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek5 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek5::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek5Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek5"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek5;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek6 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek6\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek6::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek6::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek6`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek6")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek6 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek6::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek6Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek6"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek6;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek7 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek7\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek7::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek7::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek7`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek7")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek7 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek7::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek7Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek7"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek7;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek8 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek8\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek8::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek8::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek8`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek8")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek8 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek8::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek8Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek8"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek8;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek9 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek9\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek9::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek9::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek9`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek9")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek9 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek9::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek9Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek9"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek9;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek10 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek10\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek10::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek10::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek10`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek10")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek10 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek10::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek10Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek10"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek10;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek11 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek11\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek11::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek11::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek11`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek11")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek11 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek11::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek11Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek11"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek11;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek12 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek12\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek12::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek12::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek12`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek12")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek12 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek12::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek12Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek12"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek12;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek13 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek13\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek13::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek13::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek13`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek13")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek13 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek13::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek13Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek13"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek13;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek14 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek14\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek14::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek14::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek14`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek14")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek14 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek14::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek14Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek14"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek14;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek15 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek15\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek15::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek15::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek15`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek15")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek15 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek15::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueuePeek15Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_peek15"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_peek15;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt0 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt0`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt0")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt0 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt0::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt0Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt0"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt0;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt1 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt1`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt1")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt1 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt1::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt1Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt1"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt1;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt2 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt2\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt2::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt2::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt2`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt2")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt2 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt2::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt2Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt2"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt2;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt3 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt3\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt3::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt3::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt3`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt3")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt3 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt3::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt3Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt3"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt3;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt4 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt4\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt4::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt4::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt4`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt4")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt4 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt4::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt4Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt4"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt4;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt5 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt5\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt5::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt5::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt5`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt5")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt5 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt5::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt5Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt5"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt5;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt6 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt6\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt6::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt6::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt6`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt6")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt6 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt6::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt6Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt6"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt6;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt7 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt7\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt7::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt7::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt7`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt7")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt7 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt7::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt7Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt7"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt7;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt8 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt8\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt8::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt8::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt8`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt8")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt8 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt8::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt8Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt8"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt8;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt9 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt9\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt9::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt9::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt9`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt9")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt9 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt9::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt9Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt9"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt9;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt10 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt10\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt10::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt10::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt10`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt10")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt10 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt10::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt10Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt10"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt10;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt11 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt11\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt11::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt11::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt11`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt11")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt11 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt11::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt11Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt11"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt11;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt12 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt12\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt12::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt12::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt12`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt12")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt12 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt12::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt12Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt12"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt12;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt13 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt13\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt13::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt13::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt13`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt13")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt13 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt13::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt13Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt13"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt13;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt14 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt14\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt14::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt14::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt14`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt14")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt14 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt14::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt14Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt14"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt14;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt15 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt15\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt15::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt15::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt15`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt15")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt15 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt15::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt15Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt15"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt15;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt16 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt16\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt16::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt16::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt16`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt16")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt16 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt16::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt16Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt16"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt16;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt17 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt17\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt17::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt17::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt17`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt17")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt17 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt17::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt17Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt17"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt17;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt18 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt18\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt18::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt18::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt18`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt18")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt18 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt18::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt18Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt18"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt18;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt19 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt19\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt19::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt19::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt19`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt19")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt19 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt19::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt19Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt19"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt19;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt20 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt20\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt20::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt20::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt20`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt20")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt20 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt20::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt20Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt20"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt20;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt21 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt21\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt21::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt21::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt21`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt21")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt21 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt21::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt21Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt21"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt21;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt22 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt22\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt22::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt22::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt22`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt22")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt22 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt22::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt22Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt22"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt22;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt23 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt23\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt23::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt23::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt23`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt23")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt23 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt23::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt23Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt23"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt23;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt24 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt24\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt24::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt24::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt24`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt24")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt24 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt24::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt24Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt24"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt24;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt25 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt25\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt25::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt25::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt25`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt25")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt25 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt25::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt25Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt25"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt25;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt26 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt26\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt26::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt26::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt26`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt26")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt26 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt26::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt26Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt26"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt26;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt27 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt27\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt27::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt27::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt27`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt27")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt27 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt27::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt27Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt27"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt27;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt28 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt28\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt28::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt28::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt28`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt28")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt28 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt28::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt28Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt28"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt28;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt29 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt29\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt29::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt29::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt29`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt29")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt29 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt29::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt29Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt29"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt29;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt30 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt30\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt30::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt30::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt30`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt30")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt30 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt30::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt30Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt30"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt30;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt31 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt31\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt31::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt31::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt31`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt31")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt31 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt31::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt31Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt31"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt31;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt32 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt32\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt32::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt32::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt32`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt32")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt32 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt32::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt32Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt32"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt32;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt33 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt33\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt33::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt33::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt33`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt33")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt33 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt33::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt33Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt33"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt33;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt34 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt34\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt34::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt34::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt34`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt34")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt34 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt34::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt34Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt34"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt34;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt35 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt35\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt35::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt35::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt35`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt35")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt35 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt35::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt35Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt35"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt35;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt36 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt36\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt36::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt36::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt36`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt36")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt36 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt36::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt36Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt36"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt36;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt37 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt37\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt37::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt37::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt37`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt37")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt37 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt37::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt37Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt37"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt37;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt38 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt38\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt38::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt38::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt38`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt38")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt38 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt38::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt38Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt38"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt38;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt39 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt39\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt39::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt39::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt39`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt39")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt39 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt39::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt39Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt39"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt39;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt40 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt40\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt40::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt40::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt40`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt40")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt40 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt40::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt40Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt40"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt40;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt41 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt41\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt41::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt41::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt41`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt41")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt41 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt41::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt41Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt41"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt41;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt42 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt42\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt42::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt42::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt42`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt42")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt42 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt42::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt42Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt42"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt42;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt43 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt43\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt43::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt43::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt43`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt43")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt43 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt43::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt43Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt43"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt43;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt44 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt44\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt44::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt44::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt44`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt44")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt44 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt44::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt44Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt44"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt44;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt45 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt45\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt45::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt45::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt45`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt45")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt45 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt45::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt45Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt45"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt45;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt46 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt46\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt46::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt46::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt46`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt46")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt46 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt46::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt46Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt46"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt46;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt47 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt47\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt47::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt47::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt47`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt47")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt47 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt47::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt47Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt47"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt47;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt48 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt48\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt48::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt48::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt48`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt48")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt48 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt48::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt48Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt48"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt48;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt49 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt49\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt49::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt49::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt49`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt49")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt49 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt49::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt49Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt49"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt49;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt50 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt50\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt50::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt50::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt50`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt50")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt50 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt50::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt50Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt50"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt50;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt51 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt51\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt51::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt51::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt51`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt51")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt51 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt51::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt51Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt51"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt51;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt52 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt52\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt52::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt52::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt52`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt52")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt52 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt52::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt52Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt52"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt52;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt53 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt53\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt53::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt53::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt53`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt53")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt53 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt53::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt53Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt53"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt53;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt54 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt54\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt54::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt54::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt54`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt54")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt54 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt54::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt54Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt54"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt54;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt55 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt55\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt55::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt55::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt55`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt55")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt55 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt55::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt55Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt55"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt55;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt56 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt56\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt56::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt56::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt56`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt56")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt56 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt56::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt56Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt56"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt56;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt57 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt57\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt57::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt57::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt57`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt57")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt57 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt57::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt57Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt57"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt57;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt58 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt58\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt58::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt58::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt58`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt58")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt58 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt58::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt58Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt58"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt58;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt59 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt59\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt59::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt59::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt59`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt59")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt59 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt59::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt59Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt59"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt59;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt60 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt60\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt60::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt60::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt60`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt60")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt60 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt60::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt60Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt60"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt60;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt61 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt61\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt61::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt61::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt61`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt61")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt61 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt61::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt61Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt61"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt61;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt62 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt62\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt62::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt62::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt62`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt62")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt62 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt62::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt62Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt62"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt62;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt63 (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt63\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt63::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt63::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt63`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt63")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt63 = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt63::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueCnt63Spec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_cnt63"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_cnt63;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_reset (rw) register accessor: PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_reset\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_reset::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_reset::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_reset`]
module"]
#[doc(alias = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_reset")]
pub type Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueReset = crate::Reg<
    pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_reset::Pr1MiiRt_Pr1MiiRtGCfg_RegsGQueueResetSpec,
>;
#[doc = "PR1_MII_RT__PR1_MII_RT_G_CFG__REGS_G_queue_reset"]
pub mod pr1_mii_rt__pr1_mii_rt_g_cfg__regs_g_queue_reset;
