#[doc = "Register `SDHC_WRAP__CTL_CFG__CTLCFG_cq_dcmd_response` reader"]
pub type R = crate::R<SdhcWrap_CtlCfg_CtlcfgCqDcmdResponseSpec>;
#[doc = "Register `SDHC_WRAP__CTL_CFG__CTLCFG_cq_dcmd_response` writer"]
pub type W = crate::W<SdhcWrap_CtlCfg_CtlcfgCqDcmdResponseSpec>;
#[doc = "Field `LAST_RESP` reader - 31:0\\]
This register contains the response of the command generated by the last direct-command \\[DCMD\\]
task which was sent.CQE shall update this register when it receives the response for a DCMD task. This register is considered valid only after bit 31 of CQT-DBR register is cleared by CQE."]
pub type LastRespR = crate::FieldReader<u32>;
#[doc = "Field `LAST_RESP` writer - 31:0\\]
This register contains the response of the command generated by the last direct-command \\[DCMD\\]
task which was sent.CQE shall update this register when it receives the response for a DCMD task. This register is considered valid only after bit 31 of CQT-DBR register is cleared by CQE."]
pub type LastRespW<'a, REG> = crate::FieldWriter<'a, REG, 32, u32>;
impl R {
    #[doc = "Bits 0:31 - 31:0\\]
This register contains the response of the command generated by the last direct-command \\[DCMD\\]
task which was sent.CQE shall update this register when it receives the response for a DCMD task. This register is considered valid only after bit 31 of CQT-DBR register is cleared by CQE."]
    #[inline(always)]
    pub fn last_resp(&self) -> LastRespR {
        LastRespR::new(self.bits)
    }
}
impl W {
    #[doc = "Bits 0:31 - 31:0\\]
This register contains the response of the command generated by the last direct-command \\[DCMD\\]
task which was sent.CQE shall update this register when it receives the response for a DCMD task. This register is considered valid only after bit 31 of CQT-DBR register is cleared by CQE."]
    #[inline(always)]
    #[must_use]
    pub fn last_resp(&mut self) -> LastRespW<SdhcWrap_CtlCfg_CtlcfgCqDcmdResponseSpec> {
        LastRespW::new(self, 0)
    }
}
#[doc = "This register is used for passing the response of a DCMD task to software.\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`sdhc_wrap__ctl_cfg__ctlcfg_cq_dcmd_response::R`](R).  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`sdhc_wrap__ctl_cfg__ctlcfg_cq_dcmd_response::W`](W). You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api)."]
pub struct SdhcWrap_CtlCfg_CtlcfgCqDcmdResponseSpec;
impl crate::RegisterSpec for SdhcWrap_CtlCfg_CtlcfgCqDcmdResponseSpec {
    type Ux = u32;
}
#[doc = "`read()` method returns [`sdhc_wrap__ctl_cfg__ctlcfg_cq_dcmd_response::R`](R) reader structure"]
impl crate::Readable for SdhcWrap_CtlCfg_CtlcfgCqDcmdResponseSpec {}
#[doc = "`write(|w| ..)` method takes [`sdhc_wrap__ctl_cfg__ctlcfg_cq_dcmd_response::W`](W) writer structure"]
impl crate::Writable for SdhcWrap_CtlCfg_CtlcfgCqDcmdResponseSpec {
    type Safety = crate::Unsafe;
    const ZERO_TO_MODIFY_FIELDS_BITMAP: u32 = 0;
    const ONE_TO_MODIFY_FIELDS_BITMAP: u32 = 0;
}
#[doc = "`reset()` method sets SDHC_WRAP__CTL_CFG__CTLCFG_cq_dcmd_response to value 0"]
impl crate::Resettable for SdhcWrap_CtlCfg_CtlcfgCqDcmdResponseSpec {
    const RESET_VALUE: u32 = 0;
}
